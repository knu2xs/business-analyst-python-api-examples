
<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.18.1: http://docutils.sourceforge.net/" />

    <title>Enrich Using Point Geometries &#8212; BA-Python-API-Examples 0.1.0-dev0 documentation</title>
    <link rel="stylesheet" type="text/css" href="../../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/alabaster.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/copybutton.css" />
    <script data-url_root="../../" id="documentation_options" src="../../_static/documentation_options.js"></script>
    <script src="../../_static/jquery.js"></script>
    <script src="../../_static/underscore.js"></script>
    <script src="../../_static/_sphinx_javascript_frameworks_compat.js"></script>
    <script src="../../_static/doctools.js"></script>
    <script src="../../_static/clipboard.min.js"></script>
    <script src="../../_static/copybutton.js"></script>
    <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
    <script>window.MathJax = {"tex": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true}, "options": {"ignoreHtmlClass": "tex2jax_ignore|mathjax_ignore|document", "processHtmlClass": "tex2jax_process|mathjax_process|math|output_area"}}</script>
    <script defer="defer" src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    <link rel="index" title="Index" href="../../genindex.htm" />
    <link rel="search" title="Search" href="../../search.htm" />
   
  <link rel="stylesheet" href="../../_static/custom.css" type="text/css" />
  
  
  <meta name="viewport" content="width=device-width, initial-scale=0.9, maximum-scale=0.9" />

  </head><body>
  <div class="document">
    
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
<h1 class="logo"><a href="../../index.htm">BA-Python-API-Examples</a></h1>






<p>
<iframe src="https://ghbtns.com/github-btn.html?user=knu2xs&repo=business-analyst-python-api-examples&type=watch&count=False&size=large&v=2"
  allowtransparency="true" frameborder="0" scrolling="0" width="200px" height="35px"></iframe>
</p>





<h3>Navigation</h3>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../setup.htm">Setup</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../enrich.htm">Enrich Capabilities</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../workflows.htm">Workflows</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../tools.htm">Tools</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../enrich_demo.htm">Enrich Demo</a></li>
</ul>

<div class="relations">
<h3>Related Topics</h3>
<ul>
  <li><a href="../../index.htm">Documentation overview</a><ul>
  </ul></li>
</ul>
</div>
<div id="searchbox" style="display: none" role="search">
  <h3 id="searchlabel">Quick search</h3>
    <div class="searchformwrapper">
    <form class="search" action="../../search.htm" method="get">
      <input type="text" name="q" aria-labelledby="searchlabel" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"/>
      <input type="submit" value="Go" />
    </form>
    </div>
</div>
<script>document.getElementById('searchbox').style.display = "block"</script>








        </div>
      </div>
      <div class="documentwrapper">
        <div class="bodywrapper">
          

          <div class="body" role="main">
            
  
<style>
/* CSS for nbsphinx extension */

/* remove conflicting styling from Sphinx themes */
div.nbinput.container div.prompt *,
div.nboutput.container div.prompt *,
div.nbinput.container div.input_area pre,
div.nboutput.container div.output_area pre,
div.nbinput.container div.input_area .highlight,
div.nboutput.container div.output_area .highlight {
    border: none;
    padding: 0;
    margin: 0;
    box-shadow: none;
}

div.nbinput.container > div[class*=highlight],
div.nboutput.container > div[class*=highlight] {
    margin: 0;
}

div.nbinput.container div.prompt *,
div.nboutput.container div.prompt * {
    background: none;
}

div.nboutput.container div.output_area .highlight,
div.nboutput.container div.output_area pre {
    background: unset;
}

div.nboutput.container div.output_area div.highlight {
    color: unset;  /* override Pygments text color */
}

/* avoid gaps between output lines */
div.nboutput.container div[class*=highlight] pre {
    line-height: normal;
}

/* input/output containers */
div.nbinput.container,
div.nboutput.container {
    display: -webkit-flex;
    display: flex;
    align-items: flex-start;
    margin: 0;
    width: 100%;
}
@media (max-width: 540px) {
    div.nbinput.container,
    div.nboutput.container {
        flex-direction: column;
    }
}

/* input container */
div.nbinput.container {
    padding-top: 5px;
}

/* last container */
div.nblast.container {
    padding-bottom: 5px;
}

/* input prompt */
div.nbinput.container div.prompt pre {
    color: #307FC1;
}

/* output prompt */
div.nboutput.container div.prompt pre {
    color: #BF5B3D;
}

/* all prompts */
div.nbinput.container div.prompt,
div.nboutput.container div.prompt {
    width: 4.5ex;
    padding-top: 5px;
    position: relative;
    user-select: none;
}

div.nbinput.container div.prompt > div,
div.nboutput.container div.prompt > div {
    position: absolute;
    right: 0;
    margin-right: 0.3ex;
}

@media (max-width: 540px) {
    div.nbinput.container div.prompt,
    div.nboutput.container div.prompt {
        width: unset;
        text-align: left;
        padding: 0.4em;
    }
    div.nboutput.container div.prompt.empty {
        padding: 0;
    }

    div.nbinput.container div.prompt > div,
    div.nboutput.container div.prompt > div {
        position: unset;
    }
}

/* disable scrollbars on prompts */
div.nbinput.container div.prompt pre,
div.nboutput.container div.prompt pre {
    overflow: hidden;
}

/* input/output area */
div.nbinput.container div.input_area,
div.nboutput.container div.output_area {
    -webkit-flex: 1;
    flex: 1;
    overflow: auto;
}
@media (max-width: 540px) {
    div.nbinput.container div.input_area,
    div.nboutput.container div.output_area {
        width: 100%;
    }
}

/* input area */
div.nbinput.container div.input_area {
    border: 1px solid #e0e0e0;
    border-radius: 2px;
    /*background: #f5f5f5;*/
}

/* override MathJax center alignment in output cells */
div.nboutput.container div[class*=MathJax] {
    text-align: left !important;
}

/* override sphinx.ext.imgmath center alignment in output cells */
div.nboutput.container div.math p {
    text-align: left;
}

/* standard error */
div.nboutput.container div.output_area.stderr {
    background: #fdd;
}

/* ANSI colors */
.ansi-black-fg { color: #3E424D; }
.ansi-black-bg { background-color: #3E424D; }
.ansi-black-intense-fg { color: #282C36; }
.ansi-black-intense-bg { background-color: #282C36; }
.ansi-red-fg { color: #E75C58; }
.ansi-red-bg { background-color: #E75C58; }
.ansi-red-intense-fg { color: #B22B31; }
.ansi-red-intense-bg { background-color: #B22B31; }
.ansi-green-fg { color: #00A250; }
.ansi-green-bg { background-color: #00A250; }
.ansi-green-intense-fg { color: #007427; }
.ansi-green-intense-bg { background-color: #007427; }
.ansi-yellow-fg { color: #DDB62B; }
.ansi-yellow-bg { background-color: #DDB62B; }
.ansi-yellow-intense-fg { color: #B27D12; }
.ansi-yellow-intense-bg { background-color: #B27D12; }
.ansi-blue-fg { color: #208FFB; }
.ansi-blue-bg { background-color: #208FFB; }
.ansi-blue-intense-fg { color: #0065CA; }
.ansi-blue-intense-bg { background-color: #0065CA; }
.ansi-magenta-fg { color: #D160C4; }
.ansi-magenta-bg { background-color: #D160C4; }
.ansi-magenta-intense-fg { color: #A03196; }
.ansi-magenta-intense-bg { background-color: #A03196; }
.ansi-cyan-fg { color: #60C6C8; }
.ansi-cyan-bg { background-color: #60C6C8; }
.ansi-cyan-intense-fg { color: #258F8F; }
.ansi-cyan-intense-bg { background-color: #258F8F; }
.ansi-white-fg { color: #C5C1B4; }
.ansi-white-bg { background-color: #C5C1B4; }
.ansi-white-intense-fg { color: #A1A6B2; }
.ansi-white-intense-bg { background-color: #A1A6B2; }

.ansi-default-inverse-fg { color: #FFFFFF; }
.ansi-default-inverse-bg { background-color: #000000; }

.ansi-bold { font-weight: bold; }
.ansi-underline { text-decoration: underline; }


div.nbinput.container div.input_area div[class*=highlight] > pre,
div.nboutput.container div.output_area div[class*=highlight] > pre,
div.nboutput.container div.output_area div[class*=highlight].math,
div.nboutput.container div.output_area.rendered_html,
div.nboutput.container div.output_area > div.output_javascript,
div.nboutput.container div.output_area:not(.rendered_html) > img{
    padding: 5px;
    margin: 0;
}

/* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
div.nbinput.container div.input_area > div[class^='highlight'],
div.nboutput.container div.output_area > div[class^='highlight']{
    overflow-y: hidden;
}

/* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
.prompt .copybtn {
    display: none;
}

/* Some additional styling taken form the Jupyter notebook CSS */
.jp-RenderedHTMLCommon table,
div.rendered_html table {
  border: none;
  border-collapse: collapse;
  border-spacing: 0;
  color: black;
  font-size: 12px;
  table-layout: fixed;
}
.jp-RenderedHTMLCommon thead,
div.rendered_html thead {
  border-bottom: 1px solid black;
  vertical-align: bottom;
}
.jp-RenderedHTMLCommon tr,
.jp-RenderedHTMLCommon th,
.jp-RenderedHTMLCommon td,
div.rendered_html tr,
div.rendered_html th,
div.rendered_html td {
  text-align: right;
  vertical-align: middle;
  padding: 0.5em 0.5em;
  line-height: normal;
  white-space: normal;
  max-width: none;
  border: none;
}
.jp-RenderedHTMLCommon th,
div.rendered_html th {
  font-weight: bold;
}
.jp-RenderedHTMLCommon tbody tr:nth-child(odd),
div.rendered_html tbody tr:nth-child(odd) {
  background: #f5f5f5;
}
.jp-RenderedHTMLCommon tbody tr:hover,
div.rendered_html tbody tr:hover {
  background: rgba(66, 165, 245, 0.2);
}
</style>
<section id="Enrich-Using-Point-Geometries">
<h1>Enrich Using Point Geometries<a class="headerlink" href="#Enrich-Using-Point-Geometries" title="Permalink to this heading">¶</a></h1>
<p>Starting off, we import a few required Python resources. While there are quite a few in there, the import of note is <code class="docutils literal notranslate"><span class="pre">from</span> <span class="pre">arcgis.geoenrichment</span> <span class="pre">import</span> <span class="pre">Country,</span> <span class="pre">get_countries</span></code>. We are going to use this object and method to discover and perform our analysis.</p>
<div class="nbinput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[1]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>

<span class="kn">from</span> <span class="nn">arcgis.features</span> <span class="kn">import</span> <span class="n">GeoAccessor</span>
<span class="kn">from</span> <span class="nn">arcgis.geoenrichment</span> <span class="kn">import</span> <span class="n">Country</span>
<span class="kn">from</span> <span class="nn">arcgis.geometry</span> <span class="kn">import</span> <span class="n">Geometry</span>
<span class="kn">from</span> <span class="nn">arcgis.gis</span> <span class="kn">import</span> <span class="n">GIS</span>
<span class="kn">from</span> <span class="nn">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span><span class="p">,</span> <span class="n">find_dotenv</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</pre></div>
</div>
</div>
<p>Next, we need some test data to work with. For the sake of simplicity, we are going to create two point geometries on the fly and build a Spatially Enabled Data Frame with these two points. We are going to investigate how to get very similar results by inputting just the list of point <code class="docutils literal notranslate"><span class="pre">Geometry</span></code> objects and also these geometries as part of a Spatially Enabled Data Frame.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[2]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">nm_lst</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Bayview&#39;</span><span class="p">,</span> <span class="s2">&quot;Ralph&#39;s Thriftway&quot;</span><span class="p">]</span>
<span class="n">coord_lst</span> <span class="o">=</span> <span class="p">[</span>
    <span class="p">(</span><span class="o">-</span><span class="mf">122.9074835</span><span class="p">,</span> <span class="mf">47.0450249</span><span class="p">),</span>  <span class="c1"># Bayview Grocery Store</span>
    <span class="p">(</span><span class="o">-</span><span class="mf">122.8749600</span><span class="p">,</span> <span class="mf">47.0464031</span><span class="p">)</span>   <span class="c1"># Ralph&#39;s Thriftway Grocery Store</span>
<span class="p">]</span>

<span class="c1"># create a list of point geometry objects from the coordinate tuples - what we are going to use first</span>
<span class="n">geom_lst</span> <span class="o">=</span> <span class="p">[</span><span class="n">Geometry</span><span class="p">({</span><span class="s1">&#39;x&#39;</span><span class="p">:</span> <span class="n">pt</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s1">&#39;y&#39;</span><span class="p">:</span> <span class="n">pt</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s1">&#39;spatialReference&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;wkid&#39;</span><span class="p">:</span> <span class="mi">4326</span><span class="p">}})</span> <span class="k">for</span> <span class="n">pt</span> <span class="ow">in</span> <span class="n">coord_lst</span><span class="p">]</span>

<span class="c1"># create a spatially enabled dataframe - what we are going to use later</span>
<span class="n">grocery_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">nm_lst</span><span class="p">,</span> <span class="n">geom_lst</span><span class="p">),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;store_name&#39;</span><span class="p">,</span> <span class="s1">&#39;SHAPE&#39;</span><span class="p">])</span>
<span class="n">grocery_df</span><span class="o">.</span><span class="n">spatial</span><span class="o">.</span><span class="n">set_geometry</span><span class="p">(</span><span class="s1">&#39;SHAPE&#39;</span><span class="p">)</span>
<span class="n">grocery_df</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[2]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>store_name</th>
      <th>SHAPE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Bayview</td>
      <td>{"x": -122.9074835, "y": 47.0450249, "spatialR...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Ralph's Thriftway</td>
      <td>{"x": -122.87496, "y": 47.0464031, "spatialRef...</td>
    </tr>
  </tbody>
</table>
</div></div>
</div>
<p>Now, we are going to need a connection to ArcGIS Online to demonstrate the abiliy to use ArcGIS Online for geoenrichment. This is accomplished by instantiating a <code class="docutils literal notranslate"><span class="pre">GIS</span></code> object instance with valid credentials read from environment variables.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[3]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">gis_agol</span> <span class="o">=</span> <span class="n">GIS</span><span class="p">(</span>
    <span class="n">url</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s1">&#39;ESRI_GIS_URL&#39;</span><span class="p">),</span>
    <span class="n">username</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s1">&#39;ESRI_GIS_USERNAME&#39;</span><span class="p">),</span>
    <span class="n">password</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s1">&#39;ESRI_GIS_PASSWORD&#39;</span><span class="p">)</span>
<span class="p">)</span>

<span class="n">gis_agol</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[3]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
GIS @ <a href="https://www.arcgis.com">https://www.arcgis.com</a></div>
</div>
<section id="Point-List-Using-Defaults">
<h2>Point List Using Defaults<a class="headerlink" href="#Point-List-Using-Defaults" title="Permalink to this heading">¶</a></h2>
<p>To enrich, we start by creating a <code class="docutils literal notranslate"><span class="pre">Country</span></code> object instance. As part of the constructor, we need to tell the object what Business Analyst source to use in the <code class="docutils literal notranslate"><span class="pre">gis</span></code> parameter. In this case, we are telling the object to use a local instance of ArcGIS Pro with Business Analyst and the United States data pack.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[4]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">usa_local</span> <span class="o">=</span> <span class="n">Country</span><span class="p">(</span><span class="s1">&#39;usa&#39;</span><span class="p">,</span> <span class="n">gis</span><span class="o">=</span><span class="n">GIS</span><span class="p">(</span><span class="s1">&#39;pro&#39;</span><span class="p">))</span>

<span class="n">usa_local</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[4]:
</pre></div>
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&lt;Country - United States 2021 (&#39;local&#39;)&gt;
</pre></div></div>
</div>
<p>Next, we need to get some enrich variables to use. We can discover what is available using the <code class="docutils literal notranslate"><span class="pre">enrich_variables</span></code> property of the country object to retrieve a Pandas Data Frame of variables available for the country.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[5]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">ev</span> <span class="o">=</span> <span class="n">usa_local</span><span class="o">.</span><span class="n">enrich_variables</span>

<span class="n">ev</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[5]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>alias</th>
      <th>data_collection</th>
      <th>enrich_name</th>
      <th>enrich_field_name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>CHILD_CY</td>
      <td>2021 Child Population</td>
      <td>AgeDependency</td>
      <td>AgeDependency.CHILD_CY</td>
      <td>AgeDependency_CHILD_CY</td>
    </tr>
    <tr>
      <th>1</th>
      <td>WORKAGE_CY</td>
      <td>2021 Working-Age Population</td>
      <td>AgeDependency</td>
      <td>AgeDependency.WORKAGE_CY</td>
      <td>AgeDependency_WORKAGE_CY</td>
    </tr>
    <tr>
      <th>2</th>
      <td>SENIOR_CY</td>
      <td>2021 Senior Population</td>
      <td>AgeDependency</td>
      <td>AgeDependency.SENIOR_CY</td>
      <td>AgeDependency_SENIOR_CY</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHLDDEP_CY</td>
      <td>2021 Child Dependency Ratio</td>
      <td>AgeDependency</td>
      <td>AgeDependency.CHLDDEP_CY</td>
      <td>AgeDependency_CHLDDEP_CY</td>
    </tr>
    <tr>
      <th>4</th>
      <td>AGEDEP_CY</td>
      <td>2021 Age Dependency Ratio</td>
      <td>AgeDependency</td>
      <td>AgeDependency.AGEDEP_CY</td>
      <td>AgeDependency_AGEDEP_CY</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>17958</th>
      <td>MOEMEDYRMV</td>
      <td>2019 Median Year Householder Moved In MOE (ACS...</td>
      <td>yearmovedin</td>
      <td>yearmovedin.MOEMEDYRMV</td>
      <td>yearmovedin_MOEMEDYRMV</td>
    </tr>
    <tr>
      <th>17959</th>
      <td>RELMEDYRMV</td>
      <td>2019 Median Year Householder Moved In REL (ACS...</td>
      <td>yearmovedin</td>
      <td>yearmovedin.RELMEDYRMV</td>
      <td>yearmovedin_RELMEDYRMV</td>
    </tr>
    <tr>
      <th>17960</th>
      <td>ACSOWNER</td>
      <td>2019 Owner Households (ACS 5-Yr)</td>
      <td>yearmovedin</td>
      <td>yearmovedin.ACSOWNER</td>
      <td>yearmovedin_ACSOWNER</td>
    </tr>
    <tr>
      <th>17961</th>
      <td>MOEOWNER</td>
      <td>2019 Owner Households MOE (ACS 5-Yr)</td>
      <td>yearmovedin</td>
      <td>yearmovedin.MOEOWNER</td>
      <td>yearmovedin_MOEOWNER</td>
    </tr>
    <tr>
      <th>17962</th>
      <td>RELOWNER</td>
      <td>2019 Owner Households REL (ACS 5-Yr)</td>
      <td>yearmovedin</td>
      <td>yearmovedin.RELOWNER</td>
      <td>yearmovedin_RELOWNER</td>
    </tr>
  </tbody>
</table>
<p>17963 rows × 5 columns</p>
</div></div>
</div>
<p>Tens of thousands of variables is just a few too many to deal with, so we can parse this down a bit using some Pandas Data Frame filtering to get just key United States variables for the current year.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[6]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">kv</span> <span class="o">=</span> <span class="n">ev</span><span class="p">[</span>
    <span class="p">(</span><span class="n">ev</span><span class="o">.</span><span class="n">data_collection</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">))</span>
    <span class="o">&amp;</span> <span class="p">(</span><span class="n">ev</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">&#39;cy&#39;</span><span class="p">))</span>
<span class="p">]</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="n">kv</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[6]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>alias</th>
      <th>data_collection</th>
      <th>enrich_name</th>
      <th>enrich_field_name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>TOTPOP_CY</td>
      <td>2021 Total Population</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.TOTPOP_CY</td>
      <td>KeyUSFacts_TOTPOP_CY</td>
    </tr>
    <tr>
      <th>1</th>
      <td>GQPOP_CY</td>
      <td>2021 Group Quarters Population</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.GQPOP_CY</td>
      <td>KeyUSFacts_GQPOP_CY</td>
    </tr>
    <tr>
      <th>2</th>
      <td>DIVINDX_CY</td>
      <td>2021 Diversity Index</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.DIVINDX_CY</td>
      <td>KeyUSFacts_DIVINDX_CY</td>
    </tr>
    <tr>
      <th>3</th>
      <td>TOTHH_CY</td>
      <td>2021 Total Households</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.TOTHH_CY</td>
      <td>KeyUSFacts_TOTHH_CY</td>
    </tr>
    <tr>
      <th>4</th>
      <td>AVGHHSZ_CY</td>
      <td>2021 Average Household Size</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.AVGHHSZ_CY</td>
      <td>KeyUSFacts_AVGHHSZ_CY</td>
    </tr>
    <tr>
      <th>5</th>
      <td>MEDHINC_CY</td>
      <td>2021 Median Household Income</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.MEDHINC_CY</td>
      <td>KeyUSFacts_MEDHINC_CY</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AVGHINC_CY</td>
      <td>2021 Average Household Income</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.AVGHINC_CY</td>
      <td>KeyUSFacts_AVGHINC_CY</td>
    </tr>
    <tr>
      <th>7</th>
      <td>PCI_CY</td>
      <td>2021 Per Capita Income</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.PCI_CY</td>
      <td>KeyUSFacts_PCI_CY</td>
    </tr>
    <tr>
      <th>8</th>
      <td>TOTHU_CY</td>
      <td>2021 Total Housing Units</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.TOTHU_CY</td>
      <td>KeyUSFacts_TOTHU_CY</td>
    </tr>
    <tr>
      <th>9</th>
      <td>OWNER_CY</td>
      <td>2021 Owner Occupied HUs</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.OWNER_CY</td>
      <td>KeyUSFacts_OWNER_CY</td>
    </tr>
    <tr>
      <th>10</th>
      <td>RENTER_CY</td>
      <td>2021 Renter Occupied HUs</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.RENTER_CY</td>
      <td>KeyUSFacts_RENTER_CY</td>
    </tr>
    <tr>
      <th>11</th>
      <td>VACANT_CY</td>
      <td>2021 Vacant Housing Units</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.VACANT_CY</td>
      <td>KeyUSFacts_VACANT_CY</td>
    </tr>
    <tr>
      <th>12</th>
      <td>MEDVAL_CY</td>
      <td>2021 Median Home Value</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.MEDVAL_CY</td>
      <td>KeyUSFacts_MEDVAL_CY</td>
    </tr>
    <tr>
      <th>13</th>
      <td>AVGVAL_CY</td>
      <td>2021 Average Home Value</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.AVGVAL_CY</td>
      <td>KeyUSFacts_AVGVAL_CY</td>
    </tr>
    <tr>
      <th>14</th>
      <td>POPGRW10CY</td>
      <td>2010-2021 Growth Rate: Population</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.POPGRW10CY</td>
      <td>KeyUSFacts_POPGRW10CY</td>
    </tr>
    <tr>
      <th>15</th>
      <td>HHGRW10CY</td>
      <td>2010-2021 Growth Rate: Households</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.HHGRW10CY</td>
      <td>KeyUSFacts_HHGRW10CY</td>
    </tr>
    <tr>
      <th>16</th>
      <td>FAMGRW10CY</td>
      <td>2010-2021 Growth Rate: Families</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.FAMGRW10CY</td>
      <td>KeyUSFacts_FAMGRW10CY</td>
    </tr>
    <tr>
      <th>17</th>
      <td>DPOP_CY</td>
      <td>2021 Total Daytime Population</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.DPOP_CY</td>
      <td>KeyUSFacts_DPOP_CY</td>
    </tr>
    <tr>
      <th>18</th>
      <td>DPOPWRK_CY</td>
      <td>2021 Daytime Pop: Workers</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.DPOPWRK_CY</td>
      <td>KeyUSFacts_DPOPWRK_CY</td>
    </tr>
    <tr>
      <th>19</th>
      <td>DPOPRES_CY</td>
      <td>2021 Daytime Pop: Residents</td>
      <td>KeyUSFacts</td>
      <td>KeyUSFacts.DPOPRES_CY</td>
      <td>KeyUSFacts_DPOPRES_CY</td>
    </tr>
  </tbody>
</table>
</div></div>
</div>
<p>Finally, we can enrich using the points and variables collected above. Please notice, we are not specifying the area around the input points, so we the proximity defaults are being used - a straight line distance of one kilometer around the points. This circular area is then used to apportion data to the locations specified by the point geometries.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[7]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">pt1_enrich_df</span> <span class="o">=</span> <span class="n">usa_local</span><span class="o">.</span><span class="n">enrich</span><span class="p">(</span>
    <span class="n">geographies</span><span class="o">=</span><span class="n">geom_lst</span><span class="p">,</span>
    <span class="n">enrich_variables</span><span class="o">=</span><span class="n">kv</span>
<span class="p">)</span>

<span class="n">pt1_enrich_df</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">pt1_enrich_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 2 entries, 0 to 1
Data columns (total 27 columns):
 #   Column                 Non-Null Count  Dtype
---  ------                 --------------  -----
 0   has_data               2 non-null      int64
 1   area_type              2 non-null      object
 2   buffer_units           2 non-null      object
 3   buffer_unit            2 non-null      object
 4   buffer_radii           2 non-null      float64
 5   aggregation_method     2 non-null      object
 6   keyusfacts_totpop_cy   2 non-null      float64
 7   keyusfacts_gqpop_cy    2 non-null      float64
 8   keyusfacts_divindx_cy  2 non-null      float64
 9   keyusfacts_tothh_cy    2 non-null      float64
 10  keyusfacts_avghhsz_cy  2 non-null      float64
 11  keyusfacts_medhinc_cy  2 non-null      float64
 12  keyusfacts_avghinc_cy  2 non-null      float64
 13  keyusfacts_pci_cy      2 non-null      float64
 14  keyusfacts_tothu_cy    2 non-null      float64
 15  keyusfacts_owner_cy    2 non-null      float64
 16  keyusfacts_renter_cy   2 non-null      float64
 17  keyusfacts_vacant_cy   2 non-null      float64
 18  keyusfacts_medval_cy   2 non-null      float64
 19  keyusfacts_avgval_cy   2 non-null      float64
 20  keyusfacts_popgrw10cy  2 non-null      float64
 21  keyusfacts_hhgrw10cy   2 non-null      float64
 22  keyusfacts_famgrw10cy  2 non-null      float64
 23  keyusfacts_dpop_cy     2 non-null      float64
 24  keyusfacts_dpopwrk_cy  2 non-null      float64
 25  keyusfacts_dpopres_cy  2 non-null      float64
 26  SHAPE                  2 non-null      geometry
dtypes: float64(21), geometry(1), int64(1), object(4)
memory usage: 560.0+ bytes
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[7]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>has_data</th>
      <th>area_type</th>
      <th>buffer_units</th>
      <th>buffer_unit</th>
      <th>buffer_radii</th>
      <th>aggregation_method</th>
      <th>keyusfacts_totpop_cy</th>
      <th>keyusfacts_gqpop_cy</th>
      <th>keyusfacts_divindx_cy</th>
      <th>keyusfacts_tothh_cy</th>
      <th>...</th>
      <th>keyusfacts_vacant_cy</th>
      <th>keyusfacts_medval_cy</th>
      <th>keyusfacts_avgval_cy</th>
      <th>keyusfacts_popgrw10cy</th>
      <th>keyusfacts_hhgrw10cy</th>
      <th>keyusfacts_famgrw10cy</th>
      <th>keyusfacts_dpop_cy</th>
      <th>keyusfacts_dpopwrk_cy</th>
      <th>keyusfacts_dpopres_cy</th>
      <th>SHAPE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>RingBuffer</td>
      <td>esriKilometers</td>
      <td>esriKilometers</td>
      <td>1.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>2706.0</td>
      <td>66.0</td>
      <td>38.6</td>
      <td>1727.0</td>
      <td>...</td>
      <td>218.0</td>
      <td>381908.0</td>
      <td>419728.0</td>
      <td>1.46</td>
      <td>1.74</td>
      <td>1.08</td>
      <td>7604.0</td>
      <td>6222.0</td>
      <td>1382.0</td>
      <td>{"x": -122.90748349999996, "y": 47.04502490000...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>RingBuffer</td>
      <td>esriKilometers</td>
      <td>esriKilometers</td>
      <td>1.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>4672.0</td>
      <td>75.0</td>
      <td>41.8</td>
      <td>2145.0</td>
      <td>...</td>
      <td>116.0</td>
      <td>323665.0</td>
      <td>360023.0</td>
      <td>0.73</td>
      <td>0.71</td>
      <td>0.54</td>
      <td>4623.0</td>
      <td>2558.0</td>
      <td>2065.0</td>
      <td>{"x": -122.87495999999999, "y": 47.04640310000...</td>
    </tr>
  </tbody>
</table>
<p>2 rows × 27 columns</p>
</div></div>
</div>
</section>
<section id="Specify-Proximity-Value">
<h2>Specify Proximity Value<a class="headerlink" href="#Specify-Proximity-Value" title="Permalink to this heading">¶</a></h2>
<p>If wanting to use a value different from the default of one kilometer (highly recommended), this can easily be specified using the <code class="docutils literal notranslate"><span class="pre">proximity_value</span></code> parameter.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[8]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">pt2_enrich_df</span> <span class="o">=</span> <span class="n">usa_local</span><span class="o">.</span><span class="n">enrich</span><span class="p">(</span>
    <span class="n">geographies</span><span class="o">=</span><span class="n">geom_lst</span><span class="p">,</span>
    <span class="n">enrich_variables</span><span class="o">=</span><span class="n">kv</span><span class="p">,</span>
    <span class="n">proximity_value</span><span class="o">=</span><span class="mi">5</span>
<span class="p">)</span>

<span class="n">pt2_enrich_df</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">pt2_enrich_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 2 entries, 0 to 1
Data columns (total 27 columns):
 #   Column                 Non-Null Count  Dtype
---  ------                 --------------  -----
 0   has_data               2 non-null      int64
 1   area_type              2 non-null      object
 2   buffer_units           2 non-null      object
 3   buffer_unit            2 non-null      object
 4   buffer_radii           2 non-null      float64
 5   aggregation_method     2 non-null      object
 6   keyusfacts_totpop_cy   2 non-null      float64
 7   keyusfacts_gqpop_cy    2 non-null      float64
 8   keyusfacts_divindx_cy  2 non-null      float64
 9   keyusfacts_tothh_cy    2 non-null      float64
 10  keyusfacts_avghhsz_cy  2 non-null      float64
 11  keyusfacts_medhinc_cy  2 non-null      float64
 12  keyusfacts_avghinc_cy  2 non-null      float64
 13  keyusfacts_pci_cy      2 non-null      float64
 14  keyusfacts_tothu_cy    2 non-null      float64
 15  keyusfacts_owner_cy    2 non-null      float64
 16  keyusfacts_renter_cy   2 non-null      float64
 17  keyusfacts_vacant_cy   2 non-null      float64
 18  keyusfacts_medval_cy   2 non-null      float64
 19  keyusfacts_avgval_cy   2 non-null      float64
 20  keyusfacts_popgrw10cy  2 non-null      float64
 21  keyusfacts_hhgrw10cy   2 non-null      float64
 22  keyusfacts_famgrw10cy  2 non-null      float64
 23  keyusfacts_dpop_cy     2 non-null      float64
 24  keyusfacts_dpopwrk_cy  2 non-null      float64
 25  keyusfacts_dpopres_cy  2 non-null      float64
 26  SHAPE                  2 non-null      geometry
dtypes: float64(21), geometry(1), int64(1), object(4)
memory usage: 560.0+ bytes
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[8]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>has_data</th>
      <th>area_type</th>
      <th>buffer_units</th>
      <th>buffer_unit</th>
      <th>buffer_radii</th>
      <th>aggregation_method</th>
      <th>keyusfacts_totpop_cy</th>
      <th>keyusfacts_gqpop_cy</th>
      <th>keyusfacts_divindx_cy</th>
      <th>keyusfacts_tothh_cy</th>
      <th>...</th>
      <th>keyusfacts_vacant_cy</th>
      <th>keyusfacts_medval_cy</th>
      <th>keyusfacts_avgval_cy</th>
      <th>keyusfacts_popgrw10cy</th>
      <th>keyusfacts_hhgrw10cy</th>
      <th>keyusfacts_famgrw10cy</th>
      <th>keyusfacts_dpop_cy</th>
      <th>keyusfacts_dpopwrk_cy</th>
      <th>keyusfacts_dpopres_cy</th>
      <th>SHAPE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>RingBuffer</td>
      <td>esriKilometers</td>
      <td>esriKilometers</td>
      <td>5.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>67415.0</td>
      <td>1265.0</td>
      <td>45.4</td>
      <td>29537.0</td>
      <td>...</td>
      <td>1431.0</td>
      <td>371293.0</td>
      <td>415153.0</td>
      <td>1.59</td>
      <td>1.57</td>
      <td>1.44</td>
      <td>82942.0</td>
      <td>50340.0</td>
      <td>32602.0</td>
      <td>{"x": -122.90748349999996, "y": 47.04502490000...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>RingBuffer</td>
      <td>esriKilometers</td>
      <td>esriKilometers</td>
      <td>5.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>70224.0</td>
      <td>1350.0</td>
      <td>48.5</td>
      <td>30852.0</td>
      <td>...</td>
      <td>1636.0</td>
      <td>369053.0</td>
      <td>415710.0</td>
      <td>0.99</td>
      <td>1.01</td>
      <td>0.87</td>
      <td>89116.0</td>
      <td>54806.0</td>
      <td>34310.0</td>
      <td>{"x": -122.87495999999999, "y": 47.04640310000...</td>
    </tr>
  </tbody>
</table>
<p>2 rows × 27 columns</p>
</div></div>
</div>
</section>
<section id="Specify-Proximity-Value-and-Metric">
<h2>Specify Proximity Value and Metric<a class="headerlink" href="#Specify-Proximity-Value-and-Metric" title="Permalink to this heading">¶</a></h2>
<p>If desiring to use a different measure of distance, such as miles, this can be specified as well using the <code class="docutils literal notranslate"><span class="pre">proximity_metric</span></code> parameter.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[11]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">pt3_enrich_df</span> <span class="o">=</span> <span class="n">usa_local</span><span class="o">.</span><span class="n">enrich</span><span class="p">(</span>
    <span class="n">geographies</span><span class="o">=</span><span class="n">geom_lst</span><span class="p">,</span>
    <span class="n">enrich_variables</span><span class="o">=</span><span class="n">kv</span><span class="p">,</span>
    <span class="n">proximity_value</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="n">proximity_metric</span><span class="o">=</span><span class="s1">&#39;miles&#39;</span>
<span class="p">)</span>

<span class="n">pt3_enrich_df</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">pt3_enrich_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 2 entries, 0 to 1
Data columns (total 27 columns):
 #   Column                 Non-Null Count  Dtype
---  ------                 --------------  -----
 0   has_data               2 non-null      int64
 1   area_type              2 non-null      object
 2   buffer_units           2 non-null      object
 3   buffer_unit            2 non-null      object
 4   buffer_radii           2 non-null      float64
 5   aggregation_method     2 non-null      object
 6   keyusfacts_totpop_cy   2 non-null      float64
 7   keyusfacts_gqpop_cy    2 non-null      float64
 8   keyusfacts_divindx_cy  2 non-null      float64
 9   keyusfacts_tothh_cy    2 non-null      float64
 10  keyusfacts_avghhsz_cy  2 non-null      float64
 11  keyusfacts_medhinc_cy  2 non-null      float64
 12  keyusfacts_avghinc_cy  2 non-null      float64
 13  keyusfacts_pci_cy      2 non-null      float64
 14  keyusfacts_tothu_cy    2 non-null      float64
 15  keyusfacts_owner_cy    2 non-null      float64
 16  keyusfacts_renter_cy   2 non-null      float64
 17  keyusfacts_vacant_cy   2 non-null      float64
 18  keyusfacts_medval_cy   2 non-null      float64
 19  keyusfacts_avgval_cy   2 non-null      float64
 20  keyusfacts_popgrw10cy  2 non-null      float64
 21  keyusfacts_hhgrw10cy   2 non-null      float64
 22  keyusfacts_famgrw10cy  2 non-null      float64
 23  keyusfacts_dpop_cy     2 non-null      float64
 24  keyusfacts_dpopwrk_cy  2 non-null      float64
 25  keyusfacts_dpopres_cy  2 non-null      float64
 26  SHAPE                  2 non-null      geometry
dtypes: float64(21), geometry(1), int64(1), object(4)
memory usage: 560.0+ bytes
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[11]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>has_data</th>
      <th>area_type</th>
      <th>buffer_units</th>
      <th>buffer_unit</th>
      <th>buffer_radii</th>
      <th>aggregation_method</th>
      <th>keyusfacts_totpop_cy</th>
      <th>keyusfacts_gqpop_cy</th>
      <th>keyusfacts_divindx_cy</th>
      <th>keyusfacts_tothh_cy</th>
      <th>...</th>
      <th>keyusfacts_vacant_cy</th>
      <th>keyusfacts_medval_cy</th>
      <th>keyusfacts_avgval_cy</th>
      <th>keyusfacts_popgrw10cy</th>
      <th>keyusfacts_hhgrw10cy</th>
      <th>keyusfacts_famgrw10cy</th>
      <th>keyusfacts_dpop_cy</th>
      <th>keyusfacts_dpopwrk_cy</th>
      <th>keyusfacts_dpopres_cy</th>
      <th>SHAPE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>RingBuffer</td>
      <td>esriMiles</td>
      <td>esriMiles</td>
      <td>5.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>121938.0</td>
      <td>2969.0</td>
      <td>47.4</td>
      <td>51980.0</td>
      <td>...</td>
      <td>2798.0</td>
      <td>370690.0</td>
      <td>428025.0</td>
      <td>1.31</td>
      <td>1.29</td>
      <td>1.14</td>
      <td>140743.0</td>
      <td>79614.0</td>
      <td>61129.0</td>
      <td>{"x": -122.90748349999996, "y": 47.04502490000...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>RingBuffer</td>
      <td>esriMiles</td>
      <td>esriMiles</td>
      <td>5.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>148032.0</td>
      <td>2696.0</td>
      <td>51.4</td>
      <td>61965.0</td>
      <td>...</td>
      <td>3451.0</td>
      <td>359612.0</td>
      <td>412573.0</td>
      <td>1.42</td>
      <td>1.37</td>
      <td>1.26</td>
      <td>162638.0</td>
      <td>87230.0</td>
      <td>75408.0</td>
      <td>{"x": -122.87495999999999, "y": 47.04640310000...</td>
    </tr>
  </tbody>
</table>
<p>2 rows × 27 columns</p>
</div></div>
</div>
</section>
<section id="Specify-Proximity-Type">
<h2>Specify Proximity Type<a class="headerlink" href="#Specify-Proximity-Type" title="Permalink to this heading">¶</a></h2>
<p>The above examples all use the default <code class="docutils literal notranslate"><span class="pre">proximity_type</span></code> of <code class="docutils literal notranslate"><span class="pre">straight_line</span></code>. However, based on what transportation network you have available with the GIS source you are using, other methods are also available. These can be discovered using the <code class="docutils literal notranslate"><span class="pre">travel_modes</span></code> property of the <code class="docutils literal notranslate"><span class="pre">Country</span></code>. Any of the vaues in the <code class="docutils literal notranslate"><span class="pre">names</span></code> column are valid values for <code class="docutils literal notranslate"><span class="pre">proximity_type</span></code> in addition to the default <code class="docutils literal notranslate"><span class="pre">straight_line</span></code>.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[13]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">usa_local</span><span class="o">.</span><span class="n">travel_modes</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[13]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>alias</th>
      <th>description</th>
      <th>type</th>
      <th>impedance</th>
      <th>impedance_category</th>
      <th>time_attribute_name</th>
      <th>distance_attribute_name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>driving_time</td>
      <td>Driving Time</td>
      <td>Models the movement of cars and other similar ...</td>
      <td>AUTOMOBILE</td>
      <td>TravelTime</td>
      <td>temporal</td>
      <td>TravelTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>1</th>
      <td>driving_distance</td>
      <td>Driving Distance</td>
      <td>Models the movement of cars and other similar ...</td>
      <td>AUTOMOBILE</td>
      <td>Kilometers</td>
      <td>distance</td>
      <td>TravelTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>2</th>
      <td>trucking_time</td>
      <td>Trucking Time</td>
      <td>Models basic truck travel by preferring design...</td>
      <td>TRUCK</td>
      <td>TruckTravelTime</td>
      <td>temporal</td>
      <td>TruckTravelTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>3</th>
      <td>trucking_distance</td>
      <td>Trucking Distance</td>
      <td>Models basic truck travel by preferring design...</td>
      <td>TRUCK</td>
      <td>Kilometers</td>
      <td>distance</td>
      <td>TruckTravelTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>4</th>
      <td>walking_time</td>
      <td>Walking Time</td>
      <td>Follows paths and roads that allow pedestrian ...</td>
      <td>WALK</td>
      <td>WalkTime</td>
      <td>temporal</td>
      <td>WalkTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>5</th>
      <td>walking_distance</td>
      <td>Walking Distance</td>
      <td>Follows paths and roads that allow pedestrian ...</td>
      <td>WALK</td>
      <td>Kilometers</td>
      <td>distance</td>
      <td>WalkTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>6</th>
      <td>rural_driving_time</td>
      <td>Rural Driving Time</td>
      <td>Models the movement of cars and other similar ...</td>
      <td>AUTOMOBILE</td>
      <td>TravelTime</td>
      <td>temporal</td>
      <td>TravelTime</td>
      <td>Kilometers</td>
    </tr>
    <tr>
      <th>7</th>
      <td>rural_driving_distance</td>
      <td>Rural Driving Distance</td>
      <td>Models the movement of cars and other similar ...</td>
      <td>AUTOMOBILE</td>
      <td>Kilometers</td>
      <td>distance</td>
      <td>TravelTime</td>
      <td>Kilometers</td>
    </tr>
  </tbody>
</table>
</div></div>
</div>
<p>Hence, if we want to use both paved <em>and</em> gravel roads (because gravel roads are <em>fun</em>), we can use <code class="docutils literal notranslate"><span class="pre">rural_driving_time</span></code>. Before selecting, we can investigate the details of the method by looking at the description.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[18]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">usa_local</span><span class="o">.</span><span class="n">travel_modes</span><span class="p">[</span><span class="n">usa_local</span><span class="o">.</span><span class="n">travel_modes</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s1">&#39;rural_driving_distance&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s1">&#39;description&#39;</span><span class="p">]</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[18]:
</pre></div>
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&#39;Models the movement of cars and other similar small automobiles, such as pickup trucks, and finds solutions that optimize travel distance. Travel obeys one-way roads, avoids illegal turns, and follows other rules that are specific to cars, but does not discourage travel on unpaved roads.&#39;
</pre></div></div>
</div>
<p><em>Most</em> people aren’t going to be driving as fast on a gravel road as they are on an interstate. This enables us to take into consideration the differences in speed based on the road type. Using drive time as a method to define proximity around a location is a much better represenation of how people actually move around and interact with their surrouding environemnt…such as finding food at a grocery store.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[20]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="n">pt4_enrich_df</span> <span class="o">=</span> <span class="n">usa_local</span><span class="o">.</span><span class="n">enrich</span><span class="p">(</span>
    <span class="n">geographies</span><span class="o">=</span><span class="n">geom_lst</span><span class="p">,</span>
    <span class="n">enrich_variables</span><span class="o">=</span><span class="n">kv</span><span class="p">,</span>
    <span class="n">proximity_type</span><span class="o">=</span><span class="s1">&#39;rural_driving_time&#39;</span><span class="p">,</span>
    <span class="n">proximity_value</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span>
    <span class="n">proximity_metric</span><span class="o">=</span><span class="s1">&#39;minutes&#39;</span>
<span class="p">)</span>

<span class="n">pt4_enrich_df</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">pt4_enrich_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 2 entries, 0 to 1
Data columns (total 27 columns):
 #   Column                 Non-Null Count  Dtype
---  ------                 --------------  -----
 0   has_data               2 non-null      int64
 1   area_type              2 non-null      object
 2   buffer_units           2 non-null      object
 3   buffer_unit            2 non-null      object
 4   buffer_radii           2 non-null      float64
 5   aggregation_method     2 non-null      object
 6   keyusfacts_totpop_cy   2 non-null      float64
 7   keyusfacts_gqpop_cy    2 non-null      float64
 8   keyusfacts_divindx_cy  2 non-null      float64
 9   keyusfacts_tothh_cy    2 non-null      float64
 10  keyusfacts_avghhsz_cy  2 non-null      float64
 11  keyusfacts_medhinc_cy  2 non-null      float64
 12  keyusfacts_avghinc_cy  2 non-null      float64
 13  keyusfacts_pci_cy      2 non-null      float64
 14  keyusfacts_tothu_cy    2 non-null      float64
 15  keyusfacts_owner_cy    2 non-null      float64
 16  keyusfacts_renter_cy   2 non-null      float64
 17  keyusfacts_vacant_cy   2 non-null      float64
 18  keyusfacts_medval_cy   2 non-null      float64
 19  keyusfacts_avgval_cy   2 non-null      float64
 20  keyusfacts_popgrw10cy  2 non-null      float64
 21  keyusfacts_hhgrw10cy   2 non-null      float64
 22  keyusfacts_famgrw10cy  2 non-null      float64
 23  keyusfacts_dpop_cy     2 non-null      float64
 24  keyusfacts_dpopwrk_cy  2 non-null      float64
 25  keyusfacts_dpopres_cy  2 non-null      float64
 26  SHAPE                  2 non-null      geometry
dtypes: float64(21), geometry(1), int64(1), object(4)
memory usage: 560.0+ bytes
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[20]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>has_data</th>
      <th>area_type</th>
      <th>buffer_units</th>
      <th>buffer_unit</th>
      <th>buffer_radii</th>
      <th>aggregation_method</th>
      <th>keyusfacts_totpop_cy</th>
      <th>keyusfacts_gqpop_cy</th>
      <th>keyusfacts_divindx_cy</th>
      <th>keyusfacts_tothh_cy</th>
      <th>...</th>
      <th>keyusfacts_vacant_cy</th>
      <th>keyusfacts_medval_cy</th>
      <th>keyusfacts_avgval_cy</th>
      <th>keyusfacts_popgrw10cy</th>
      <th>keyusfacts_hhgrw10cy</th>
      <th>keyusfacts_famgrw10cy</th>
      <th>keyusfacts_dpop_cy</th>
      <th>keyusfacts_dpopwrk_cy</th>
      <th>keyusfacts_dpopres_cy</th>
      <th>SHAPE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Rural Driving Time</td>
      <td>Minutes</td>
      <td>Minutes</td>
      <td>12.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>89167.0</td>
      <td>2085.0</td>
      <td>47.4</td>
      <td>39012.0</td>
      <td>...</td>
      <td>2045.0</td>
      <td>370989.0</td>
      <td>423914.0</td>
      <td>1.38</td>
      <td>1.36</td>
      <td>1.2</td>
      <td>113049.0</td>
      <td>68827.0</td>
      <td>44222.0</td>
      <td>{"x": -122.90748349999996, "y": 47.04502490000...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>Rural Driving Time</td>
      <td>Minutes</td>
      <td>Minutes</td>
      <td>12.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>125186.0</td>
      <td>2604.0</td>
      <td>52.1</td>
      <td>53293.0</td>
      <td>...</td>
      <td>3074.0</td>
      <td>359599.0</td>
      <td>403034.0</td>
      <td>1.43</td>
      <td>1.41</td>
      <td>1.3</td>
      <td>144557.0</td>
      <td>81408.0</td>
      <td>63149.0</td>
      <td>{"x": -122.87495999999999, "y": 47.04640310000...</td>
    </tr>
  </tbody>
</table>
<p>2 rows × 27 columns</p>
</div></div>
</div>
</section>
<section id="Use-a-Spatially-Enabled-Data-Frame">
<h2>Use a Spatially Enabled Data Frame<a class="headerlink" href="#Use-a-Spatially-Enabled-Data-Frame" title="Permalink to this heading">¶</a></h2>
<p>Finally, although using a list of <code class="docutils literal notranslate"><span class="pre">Geometry</span></code> objects may be useful, likely a much more common paradigm is the Spatially Enabled Data Frame. Above, we created a Spatially Enabled Data Frame. We can use this as input into the <code class="docutils literal notranslate"><span class="pre">geographies</span></code> parameter.</p>
<p>Also, just to demonstrate the interchangability of GIS sources, we are going to create a <code class="docutils literal notranslate"><span class="pre">Country</span></code> instance using the connection to ArcGIS Online, and perform the same workflow.</p>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[23]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="c1"># create country</span>
<span class="n">usa_gis</span> <span class="o">=</span> <span class="n">Country</span><span class="p">(</span><span class="s1">&#39;usa&#39;</span><span class="p">,</span> <span class="n">gis</span><span class="o">=</span><span class="n">gis_agol</span><span class="p">)</span>

<span class="c1"># select variables</span>
<span class="n">ev</span> <span class="o">=</span> <span class="n">usa_gis</span><span class="o">.</span><span class="n">enrich_variables</span>
<span class="n">kv</span> <span class="o">=</span> <span class="n">ev</span><span class="p">[</span>
    <span class="p">(</span><span class="n">ev</span><span class="o">.</span><span class="n">data_collection</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">))</span>
    <span class="o">&amp;</span> <span class="p">(</span><span class="n">ev</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">&#39;cy&#39;</span><span class="p">))</span>
<span class="p">]</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="c1"># perform enrichment</span>
<span class="n">pt5_enrich_df</span> <span class="o">=</span> <span class="n">usa_gis</span><span class="o">.</span><span class="n">enrich</span><span class="p">(</span>
    <span class="n">geographies</span><span class="o">=</span><span class="n">geom_lst</span><span class="p">,</span>
    <span class="n">enrich_variables</span><span class="o">=</span><span class="n">kv</span><span class="p">,</span>
    <span class="n">proximity_type</span><span class="o">=</span><span class="s1">&#39;rural_driving_time&#39;</span><span class="p">,</span>
    <span class="n">proximity_value</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span>
    <span class="n">proximity_metric</span><span class="o">=</span><span class="s1">&#39;minutes&#39;</span>
<span class="p">)</span>

<span class="n">pt5_enrich_df</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">pt5_enrich_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 2 entries, 0 to 1
Data columns (total 27 columns):
 #   Column                 Non-Null Count  Dtype
---  ------                 --------------  -----
 0   has_data               2 non-null      int64
 1   area_type              2 non-null      object
 2   buffer_units           2 non-null      object
 3   buffer_unit            2 non-null      object
 4   buffer_radii           2 non-null      float64
 5   aggregation_method     2 non-null      object
 6   keyusfacts_totpop_cy   2 non-null      float64
 7   keyusfacts_gqpop_cy    2 non-null      float64
 8   keyusfacts_divindx_cy  2 non-null      float64
 9   keyusfacts_tothh_cy    2 non-null      float64
 10  keyusfacts_avghhsz_cy  2 non-null      float64
 11  keyusfacts_medhinc_cy  2 non-null      float64
 12  keyusfacts_avghinc_cy  2 non-null      float64
 13  keyusfacts_pci_cy      2 non-null      float64
 14  keyusfacts_tothu_cy    2 non-null      float64
 15  keyusfacts_owner_cy    2 non-null      float64
 16  keyusfacts_renter_cy   2 non-null      float64
 17  keyusfacts_vacant_cy   2 non-null      float64
 18  keyusfacts_medval_cy   2 non-null      float64
 19  keyusfacts_avgval_cy   2 non-null      float64
 20  keyusfacts_popgrw10cy  2 non-null      float64
 21  keyusfacts_hhgrw10cy   2 non-null      float64
 22  keyusfacts_famgrw10cy  2 non-null      float64
 23  keyusfacts_dpop_cy     2 non-null      float64
 24  keyusfacts_dpopwrk_cy  2 non-null      float64
 25  keyusfacts_dpopres_cy  2 non-null      float64
 26  SHAPE                  2 non-null      geometry
dtypes: float64(21), geometry(1), int64(1), object(4)
memory usage: 560.0+ bytes
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[23]:
</pre></div>
</div>
<div class="output_area rendered_html docutils container">
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>has_data</th>
      <th>area_type</th>
      <th>buffer_units</th>
      <th>buffer_unit</th>
      <th>buffer_radii</th>
      <th>aggregation_method</th>
      <th>keyusfacts_totpop_cy</th>
      <th>keyusfacts_gqpop_cy</th>
      <th>keyusfacts_divindx_cy</th>
      <th>keyusfacts_tothh_cy</th>
      <th>...</th>
      <th>keyusfacts_vacant_cy</th>
      <th>keyusfacts_medval_cy</th>
      <th>keyusfacts_avgval_cy</th>
      <th>keyusfacts_popgrw10cy</th>
      <th>keyusfacts_hhgrw10cy</th>
      <th>keyusfacts_famgrw10cy</th>
      <th>keyusfacts_dpop_cy</th>
      <th>keyusfacts_dpopwrk_cy</th>
      <th>keyusfacts_dpopres_cy</th>
      <th>SHAPE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Rural Driving Time</td>
      <td>Minutes</td>
      <td>Minutes</td>
      <td>12.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>89167.0</td>
      <td>2085.0</td>
      <td>47.4</td>
      <td>39012.0</td>
      <td>...</td>
      <td>2045.0</td>
      <td>370989.0</td>
      <td>423914.0</td>
      <td>1.38</td>
      <td>1.36</td>
      <td>1.2</td>
      <td>113049.0</td>
      <td>68827.0</td>
      <td>44222.0</td>
      <td>{"x": -122.90748349999996, "y": 47.04502490000...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>Rural Driving Time</td>
      <td>Minutes</td>
      <td>Minutes</td>
      <td>12.0</td>
      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>
      <td>125186.0</td>
      <td>2604.0</td>
      <td>52.1</td>
      <td>53293.0</td>
      <td>...</td>
      <td>3074.0</td>
      <td>359599.0</td>
      <td>403034.0</td>
      <td>1.43</td>
      <td>1.41</td>
      <td>1.3</td>
      <td>144557.0</td>
      <td>81408.0</td>
      <td>63149.0</td>
      <td>{"x": -122.87495999999999, "y": 47.04640310000...</td>
    </tr>
  </tbody>
</table>
<p>2 rows × 27 columns</p>
</div></div>
</div>
</section>
</section>


          </div>
          
        </div>
      </div>
    <div class="clearer"></div>
  </div>
    <div class="footer">
      &copy;2021, Joel McCune.
      
      |
      Powered by <a href="http://sphinx-doc.org/">Sphinx 5.0.2</a>
      &amp; <a href="https://github.com/bitprophet/alabaster">Alabaster 0.7.12</a>
      
      |
      <a href="../../_sources/source/notebooks/enrich-pt-geom.ipynb.txt"
          rel="nofollow">Page source</a>
    </div>

    

    
  </body>
</html>