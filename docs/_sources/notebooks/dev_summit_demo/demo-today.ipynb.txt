{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Demonstration\n",
    "\n",
    "## Imports and Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from pathlib import Path\n",
    "\n",
    "from arcgis.features import GeoAccessor\n",
    "from arcgis.gis import GIS\n",
    "from demo_data import demo_data\n",
    "from dotenv import load_dotenv, find_dotenv\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "load_dotenv(find_dotenv())\n",
    "\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "gis_local = GIS('pro')\n",
    "\n",
    "gis_agol = GIS(\n",
    "    url=os.getenv('ESRI_GIS_URL'), \n",
    "    username=os.getenv('ESRI_GIS_USERNAME'),\n",
    "    password=os.getenv('ESRI_GIS_PASSWORD')\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Let It Rip"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "from arcgis.geoenrichment import get_countries, Country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "gis = gis_agol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 481 entries, 0 to 480\n",
      "Data columns (total 32 columns):\n",
      " #   Column                             Non-Null Count  Dtype   \n",
      "---  ------                             --------------  -----   \n",
      " 0   id                                 481 non-null    object  \n",
      " 1   source_country                     481 non-null    object  \n",
      " 2   aggregation_method                 481 non-null    object  \n",
      " 3   population_to_polygon_size_rating  481 non-null    float64 \n",
      " 4   apportionment_confidence           481 non-null    float64 \n",
      " 5   has_data                           481 non-null    int64   \n",
      " 6   totpop_cy                          481 non-null    int64   \n",
      " 7   gqpop_cy                           481 non-null    int64   \n",
      " 8   divindx_cy                         481 non-null    int64   \n",
      " 9   tothh_cy                           481 non-null    int64   \n",
      " 10  avghhsz_cy                         481 non-null    int64   \n",
      " 11  medhinc_cy                         481 non-null    int64   \n",
      " 12  avghinc_cy                         481 non-null    int64   \n",
      " 13  pci_cy                             481 non-null    int64   \n",
      " 14  tothu_cy                           481 non-null    int64   \n",
      " 15  owner_cy                           481 non-null    int64   \n",
      " 16  renter_cy                          481 non-null    int64   \n",
      " 17  vacant_cy                          481 non-null    int64   \n",
      " 18  medval_cy                          481 non-null    int64   \n",
      " 19  avgval_cy                          481 non-null    int64   \n",
      " 20  popgrw10_cy                        481 non-null    int64   \n",
      " 21  hhgrw10_cy                         481 non-null    int64   \n",
      " 22  famgrw10_cy                        481 non-null    int64   \n",
      " 23  popgrwcyfy                         481 non-null    int64   \n",
      " 24  hhgrwcyfy                          481 non-null    int64   \n",
      " 25  famgrwcyfy                         481 non-null    int64   \n",
      " 26  mhigrwcyfy                         481 non-null    int64   \n",
      " 27  pcigrwcyfy                         481 non-null    int64   \n",
      " 28  dpop_cy                            481 non-null    int64   \n",
      " 29  dpopwrk_cy                         481 non-null    int64   \n",
      " 30  dpopres_cy                         481 non-null    int64   \n",
      " 31  SHAPE                              481 non-null    geometry\n",
      "dtypes: float64(2), geometry(1), int64(26), object(3)\n",
      "memory usage: 120.4+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>source_country</th>\n",
       "      <th>aggregation_method</th>\n",
       "      <th>population_to_polygon_size_rating</th>\n",
       "      <th>apportionment_confidence</th>\n",
       "      <th>has_data</th>\n",
       "      <th>totpop_cy</th>\n",
       "      <th>gqpop_cy</th>\n",
       "      <th>divindx_cy</th>\n",
       "      <th>tothh_cy</th>\n",
       "      <th>...</th>\n",
       "      <th>famgrw10_cy</th>\n",
       "      <th>popgrwcyfy</th>\n",
       "      <th>hhgrwcyfy</th>\n",
       "      <th>famgrwcyfy</th>\n",
       "      <th>mhigrwcyfy</th>\n",
       "      <th>pcigrwcyfy</th>\n",
       "      <th>dpop_cy</th>\n",
       "      <th>dpopwrk_cy</th>\n",
       "      <th>dpopres_cy</th>\n",
       "      <th>SHAPE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9320014.00</td>\n",
       "      <td>USA</td>\n",
       "      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>\n",
       "      <td>2.191</td>\n",
       "      <td>2.576</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>{\"rings\": [[[-122.3599099999031, 49.0824700000...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9320206.00</td>\n",
       "      <td>USA</td>\n",
       "      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>\n",
       "      <td>2.191</td>\n",
       "      <td>2.576</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>{\"rings\": [[[-122.2692710001368, 49.1865999997...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9320207.00</td>\n",
       "      <td>USA</td>\n",
       "      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>\n",
       "      <td>2.191</td>\n",
       "      <td>2.576</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>{\"rings\": [[[-122.3291220006446, 49.1598059995...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9330001.01</td>\n",
       "      <td>USA</td>\n",
       "      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>\n",
       "      <td>2.191</td>\n",
       "      <td>2.576</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>{\"rings\": [[[-123.0234740000042, 49.2230569998...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9330001.02</td>\n",
       "      <td>USA</td>\n",
       "      <td>BlockApportionment:US.BlockGroups;PointsLayer:...</td>\n",
       "      <td>2.191</td>\n",
       "      <td>2.576</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>{\"rings\": [[[-123.0229470006478, 49.2025850000...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id source_country  \\\n",
       "0  9320014.00            USA   \n",
       "1  9320206.00            USA   \n",
       "2  9320207.00            USA   \n",
       "3  9330001.01            USA   \n",
       "4  9330001.02            USA   \n",
       "\n",
       "                                  aggregation_method  \\\n",
       "0  BlockApportionment:US.BlockGroups;PointsLayer:...   \n",
       "1  BlockApportionment:US.BlockGroups;PointsLayer:...   \n",
       "2  BlockApportionment:US.BlockGroups;PointsLayer:...   \n",
       "3  BlockApportionment:US.BlockGroups;PointsLayer:...   \n",
       "4  BlockApportionment:US.BlockGroups;PointsLayer:...   \n",
       "\n",
       "   population_to_polygon_size_rating  apportionment_confidence  has_data  \\\n",
       "0                              2.191                     2.576         0   \n",
       "1                              2.191                     2.576         0   \n",
       "2                              2.191                     2.576         0   \n",
       "3                              2.191                     2.576         0   \n",
       "4                              2.191                     2.576         0   \n",
       "\n",
       "   totpop_cy  gqpop_cy  divindx_cy  tothh_cy  ...  famgrw10_cy  popgrwcyfy  \\\n",
       "0          0         0           0         0  ...            0           0   \n",
       "1          0         0           0         0  ...            0           0   \n",
       "2          0         0           0         0  ...            0           0   \n",
       "3          0         0           0         0  ...            0           0   \n",
       "4          0         0           0         0  ...            0           0   \n",
       "\n",
       "   hhgrwcyfy  famgrwcyfy  mhigrwcyfy  pcigrwcyfy  dpop_cy  dpopwrk_cy  \\\n",
       "0          0           0           0           0        0           0   \n",
       "1          0           0           0           0        0           0   \n",
       "2          0           0           0           0        0           0   \n",
       "3          0           0           0           0        0           0   \n",
       "4          0           0           0           0        0           0   \n",
       "\n",
       "   dpopres_cy                                              SHAPE  \n",
       "0           0  {\"rings\": [[[-122.3599099999031, 49.0824700000...  \n",
       "1           0  {\"rings\": [[[-122.2692710001368, 49.1865999997...  \n",
       "2           0  {\"rings\": [[[-122.3291220006446, 49.1598059995...  \n",
       "3           0  {\"rings\": [[[-123.0234740000042, 49.2230569998...  \n",
       "4           0  {\"rings\": [[[-123.0229470006478, 49.2025850000...  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cntry = Country('usa', gis=gis_agol)\n",
    "\n",
    "in_geo = demo_data.van_census_tracts.df\n",
    "\n",
    "ev = cntry.enrich_variables\n",
    "kv = ev[\n",
    "    (ev.data_collection.str.lower().str.contains('key'))\n",
    "    & (ev.name.str.lower().str.contains('cy'))\n",
    "].reset_index(drop=True)\n",
    "\n",
    "edf = cntry.enrich(in_geo, enrich_variables=kv)\n",
    "\n",
    "edf.info()\n",
    "edf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 481 entries, 0 to 480\n",
      "Data columns (total 22 columns):\n",
      " #   Column                             Non-Null Count  Dtype   \n",
      "---  ------                             --------------  -----   \n",
      " 0   std_geography_level                481 non-null    object  \n",
      " 1   std_geography_name                 481 non-null    object  \n",
      " 2   std_geography_id                   481 non-null    object  \n",
      " 3   source_country                     481 non-null    object  \n",
      " 4   aggregation_method                 481 non-null    object  \n",
      " 5   population_to_polygon_size_rating  481 non-null    int64   \n",
      " 6   apportionment_confidence           481 non-null    int64   \n",
      " 7   has_data                           481 non-null    int64   \n",
      " 8   ecyptapop                          481 non-null    int64   \n",
      " 9   ecydaypop                          481 non-null    int64   \n",
      " 10  ecyworkpop                         481 non-null    int64   \n",
      " 11  ecyhomepop                         481 non-null    int64   \n",
      " 12  ecyhfscf                           481 non-null    int64   \n",
      " 13  ecyhszavg                          481 non-null    float64 \n",
      " 14  ecyhniavg                          481 non-null    float64 \n",
      " 15  ecyhnimed                          481 non-null    float64 \n",
      " 16  ecytenhhd                          481 non-null    int64   \n",
      " 17  ecytenown                          481 non-null    int64   \n",
      " 18  ecytenrent                         481 non-null    int64   \n",
      " 19  ecytenband                         481 non-null    int64   \n",
      " 20  ecyactpr                           481 non-null    float64 \n",
      " 21  SHAPE                              481 non-null    geometry\n",
      "dtypes: float64(4), geometry(1), int64(12), object(5)\n",
      "memory usage: 82.8+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>std_geography_level</th>\n",
       "      <th>std_geography_name</th>\n",
       "      <th>std_geography_id</th>\n",
       "      <th>source_country</th>\n",
       "      <th>aggregation_method</th>\n",
       "      <th>population_to_polygon_size_rating</th>\n",
       "      <th>apportionment_confidence</th>\n",
       "      <th>has_data</th>\n",
       "      <th>ecyptapop</th>\n",
       "      <th>ecydaypop</th>\n",
       "      <th>...</th>\n",
       "      <th>ecyhfscf</th>\n",
       "      <th>ecyhszavg</th>\n",
       "      <th>ecyhniavg</th>\n",
       "      <th>ecyhnimed</th>\n",
       "      <th>ecytenhhd</th>\n",
       "      <th>ecytenown</th>\n",
       "      <th>ecytenrent</th>\n",
       "      <th>ecytenband</th>\n",
       "      <th>ecyactpr</th>\n",
       "      <th>SHAPE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CAN.CT</td>\n",
       "      <td>Abbotsford - Mission (0014.00)</td>\n",
       "      <td>9320014.00</td>\n",
       "      <td>CAN</td>\n",
       "      <td>Query:CAN.CT</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>11730</td>\n",
       "      <td>10354</td>\n",
       "      <td>...</td>\n",
       "      <td>2778</td>\n",
       "      <td>3.5</td>\n",
       "      <td>153575.51</td>\n",
       "      <td>126164.14</td>\n",
       "      <td>3300</td>\n",
       "      <td>2489</td>\n",
       "      <td>809</td>\n",
       "      <td>2</td>\n",
       "      <td>72.7</td>\n",
       "      <td>{\"rings\": [[[-122.35990999990312, 49.082470000...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CAN.CT</td>\n",
       "      <td>Abbotsford - Mission (0206.00)</td>\n",
       "      <td>9320206.00</td>\n",
       "      <td>CAN</td>\n",
       "      <td>Query:CAN.CT</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>3451</td>\n",
       "      <td>2004</td>\n",
       "      <td>...</td>\n",
       "      <td>883</td>\n",
       "      <td>2.8</td>\n",
       "      <td>110279.93</td>\n",
       "      <td>88163.39</td>\n",
       "      <td>1239</td>\n",
       "      <td>1086</td>\n",
       "      <td>153</td>\n",
       "      <td>0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>{\"rings\": [[[-122.26927100013678, 49.186599999...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CAN.CT</td>\n",
       "      <td>Abbotsford - Mission (0207.00)</td>\n",
       "      <td>9320207.00</td>\n",
       "      <td>CAN</td>\n",
       "      <td>Query:CAN.CT</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>2458</td>\n",
       "      <td>1441</td>\n",
       "      <td>...</td>\n",
       "      <td>593</td>\n",
       "      <td>3.2</td>\n",
       "      <td>136071.43</td>\n",
       "      <td>110063.06</td>\n",
       "      <td>737</td>\n",
       "      <td>619</td>\n",
       "      <td>118</td>\n",
       "      <td>0</td>\n",
       "      <td>70.9</td>\n",
       "      <td>{\"rings\": [[[-122.32912200064465, 49.159805999...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CAN.CT</td>\n",
       "      <td>Vancouver (0001.01)</td>\n",
       "      <td>9330001.01</td>\n",
       "      <td>CAN</td>\n",
       "      <td>Query:CAN.CT</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>6307</td>\n",
       "      <td>3707</td>\n",
       "      <td>...</td>\n",
       "      <td>1666</td>\n",
       "      <td>2.8</td>\n",
       "      <td>105356.52</td>\n",
       "      <td>87548.79</td>\n",
       "      <td>2236</td>\n",
       "      <td>1150</td>\n",
       "      <td>1086</td>\n",
       "      <td>0</td>\n",
       "      <td>64.7</td>\n",
       "      <td>{\"rings\": [[[-123.02347400000423, 49.223056999...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CAN.CT</td>\n",
       "      <td>Vancouver (0001.02)</td>\n",
       "      <td>9330001.02</td>\n",
       "      <td>CAN</td>\n",
       "      <td>Query:CAN.CT</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>7202</td>\n",
       "      <td>5226</td>\n",
       "      <td>...</td>\n",
       "      <td>2027</td>\n",
       "      <td>2.6</td>\n",
       "      <td>115560.82</td>\n",
       "      <td>94123.65</td>\n",
       "      <td>2691</td>\n",
       "      <td>1771</td>\n",
       "      <td>920</td>\n",
       "      <td>0</td>\n",
       "      <td>65.5</td>\n",
       "      <td>{\"rings\": [[[-123.02294700064785, 49.202585000...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  std_geography_level              std_geography_name std_geography_id  \\\n",
       "0              CAN.CT  Abbotsford - Mission (0014.00)       9320014.00   \n",
       "1              CAN.CT  Abbotsford - Mission (0206.00)       9320206.00   \n",
       "2              CAN.CT  Abbotsford - Mission (0207.00)       9320207.00   \n",
       "3              CAN.CT             Vancouver (0001.01)       9330001.01   \n",
       "4              CAN.CT             Vancouver (0001.02)       9330001.02   \n",
       "\n",
       "  source_country aggregation_method  population_to_polygon_size_rating  \\\n",
       "0            CAN       Query:CAN.CT                                 -1   \n",
       "1            CAN       Query:CAN.CT                                 -1   \n",
       "2            CAN       Query:CAN.CT                                 -1   \n",
       "3            CAN       Query:CAN.CT                                 -1   \n",
       "4            CAN       Query:CAN.CT                                 -1   \n",
       "\n",
       "   apportionment_confidence  has_data  ecyptapop  ecydaypop  ...  ecyhfscf  \\\n",
       "0                        -1         1      11730      10354  ...      2778   \n",
       "1                        -1         1       3451       2004  ...       883   \n",
       "2                        -1         1       2458       1441  ...       593   \n",
       "3                        -1         1       6307       3707  ...      1666   \n",
       "4                        -1         1       7202       5226  ...      2027   \n",
       "\n",
       "   ecyhszavg  ecyhniavg  ecyhnimed  ecytenhhd  ecytenown  ecytenrent  \\\n",
       "0        3.5  153575.51  126164.14       3300       2489         809   \n",
       "1        2.8  110279.93   88163.39       1239       1086         153   \n",
       "2        3.2  136071.43  110063.06        737        619         118   \n",
       "3        2.8  105356.52   87548.79       2236       1150        1086   \n",
       "4        2.6  115560.82   94123.65       2691       1771         920   \n",
       "\n",
       "   ecytenband  ecyactpr                                              SHAPE  \n",
       "0           2      72.7  {\"rings\": [[[-122.35990999990312, 49.082470000...  \n",
       "1           0      70.0  {\"rings\": [[[-122.26927100013678, 49.186599999...  \n",
       "2           0      70.9  {\"rings\": [[[-122.32912200064465, 49.159805999...  \n",
       "3           0      64.7  {\"rings\": [[[-123.02347400000423, 49.223056999...  \n",
       "4           0      65.5  {\"rings\": [[[-123.02294700064785, 49.202585000...  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cntry = Country('can', gis=gis_agol)\n",
    "\n",
    "in_geo = demo_data.van_census_tracts.df\n",
    "\n",
    "ev = cntry.enrich_variables\n",
    "kv = ev[\n",
    "    (ev.data_collection.str.lower().str.contains('key'))\n",
    "    & (ev.name.str.lower().str.contains('cy'))\n",
    "].reset_index(drop=True)\n",
    "\n",
    "edf = cntry.enrich(in_geo, enrich_variables=kv, standard_geography_level='ct', standard_geography_id_column='ID')\n",
    "\n",
    "edf.info()\n",
    "edf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
